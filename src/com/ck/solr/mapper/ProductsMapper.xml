<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ck.solr.mapper.ProductsMapper" >
  <resultMap id="BaseResultMap" type="com.ck.solr.model.Products" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="catalog" property="catalog" jdbcType="INTEGER" />
    <result column="catalog_name" property="catalog_name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="release_time" property="release_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ck.solr.model.Products" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, pname, catalog, catalog_name, price, number, picture, release_time
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ck.solr.model.ProductsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ck.solr.model.ProductsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from products
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from products
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ck.solr.model.ProductsExample" >
    delete from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ck.solr.model.Products" >
    insert into products (pid, pname, catalog, 
      catalog_name, price, number, 
      picture, release_time, description
      )
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{catalog,jdbcType=INTEGER}, 
      #{catalog_name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{number,jdbcType=INTEGER}, 
      #{picture,jdbcType=VARCHAR}, #{release_time,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ck.solr.model.Products" >
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="catalog != null" >
        catalog,
      </if>
      <if test="catalog_name != null" >
        catalog_name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="release_time != null" >
        release_time,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="catalog != null" >
        #{catalog,jdbcType=INTEGER},
      </if>
      <if test="catalog_name != null" >
        #{catalog_name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="release_time != null" >
        #{release_time,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ck.solr.model.ProductsExample" resultType="java.lang.Integer" >
    select count(*) from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update products
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.catalog != null" >
        catalog = #{record.catalog,jdbcType=INTEGER},
      </if>
      <if test="record.catalog_name != null" >
        catalog_name = #{record.catalog_name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.picture != null" >
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.release_time != null" >
        release_time = #{record.release_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update products
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      catalog = #{record.catalog,jdbcType=INTEGER},
      catalog_name = #{record.catalog_name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      number = #{record.number,jdbcType=INTEGER},
      picture = #{record.picture,jdbcType=VARCHAR},
      release_time = #{record.release_time,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update products
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      catalog = #{record.catalog,jdbcType=INTEGER},
      catalog_name = #{record.catalog_name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      number = #{record.number,jdbcType=INTEGER},
      picture = #{record.picture,jdbcType=VARCHAR},
      release_time = #{record.release_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ck.solr.model.Products" >
    update products
    <set >
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="catalog != null" >
        catalog = #{catalog,jdbcType=INTEGER},
      </if>
      <if test="catalog_name != null" >
        catalog_name = #{catalog_name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="release_time != null" >
        release_time = #{release_time,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ck.solr.model.Products" >
    update products
    set pname = #{pname,jdbcType=VARCHAR},
      catalog = #{catalog,jdbcType=INTEGER},
      catalog_name = #{catalog_name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      number = #{number,jdbcType=INTEGER},
      picture = #{picture,jdbcType=VARCHAR},
      release_time = #{release_time,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ck.solr.model.Products" >
    update products
    set pname = #{pname,jdbcType=VARCHAR},
      catalog = #{catalog,jdbcType=INTEGER},
      catalog_name = #{catalog_name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      number = #{number,jdbcType=INTEGER},
      picture = #{picture,jdbcType=VARCHAR},
      release_time = #{release_time,jdbcType=TIMESTAMP}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>